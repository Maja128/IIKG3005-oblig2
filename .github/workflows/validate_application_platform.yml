name: Validate application platform

on:
  push:
    branches-ignore:
      - 'main'
    paths:
      - 'modules/database/**'
      - 'aplication_platform/**'
  workflow_dispatch:

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:

  database:
    runs-on: ubuntu-latest
    env:
      WORKING_DIR: ./modules/database

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform fmt
        run: terraform fmt
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform validate
        run: terraform validate
        working-directory: ${{ env.WORKING_DIR }}

      - name: Tfsec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: ${{ env.WORKING_DIR }}
          github_token: ${{ env.GITHUB_TOKEN }}
  
  application_platform:
    runs-on: ubuntu-latest
    env:
      WORKING_DIR: ./application_platform

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform fmt
        run: terraform fmt
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform validate
        run: terraform validate
        working-directory: ${{ env.WORKING_DIR }}

      - name: Tfsec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: ${{ env.WORKING_DIR }}
          github_token: ${{ env.GITHUB_TOKEN }}
